@model Question_Paper_Management.Models.Question

@{
    ViewBag.Title = "Create";
}

<center class="container mt-5">
    @using (Html.BeginForm("Create", "Questions", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-8 offset-md-2">
                <h4>Create Question</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group mb-2">
                    @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(model => model.Option4, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mb-2">
                    @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="btn-group mb-2">
                        <input type="submit" value="Create" class="btn btn-primary me-2" />
                        @Html.ActionLink("Back to List", "Index", "QuestionPapers", null, new { @class = "btn btn-secondary" })
                    </div>
            </div>
        </div>
    }

</center>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
