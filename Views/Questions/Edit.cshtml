@model Question_Paper_Management.Models.Question

@{
    ViewBag.Title = "Edit";
}

<div class="container mt-5">
    @using (Html.BeginForm("Edit", "Questions"))
    {
        @Html.AntiForgeryToken()

        <div class="text-center">
            <h4>Edit Question</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.QuestionID)
            @Html.HiddenFor(model => model.QuestionPaperID)

            <div class="form-group row">
                @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Option4, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="btn-group">
                <input type="submit" value="Save" class="btn btn-primary me-2" />
                @Html.ActionLink("Back to List", "Index", "QuestionPapers", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
